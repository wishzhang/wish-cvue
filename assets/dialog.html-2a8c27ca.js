import{_ as d,L as a,n as l,p,M as n,U as c,Q as t,s,a0 as i}from"./framework-074a7e01.js";const u={},r=t("h1",{id:"dialog-对话框",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#dialog-对话框","aria-hidden":"true"},"#"),s(" Dialog 对话框")],-1),k=t("p",null,"在保留当前页面状态的情况下，告知用户并承载相关操作。",-1),g=t("h2",{id:"示例",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#示例","aria-hidden":"true"},"#"),s(" 示例")],-1),v=i(`<div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">text</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dialogVisible = true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 点击打开弹窗<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cvue-dialog</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>新增<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dialogVisible<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@confirm</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleConfirm<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>item1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>item2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>item3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>item4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>item5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cvue-dialog</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

  <span class="token keyword">const</span> dialogVisible <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> <span class="token function-variable function">handleConfirm</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> startLoading<span class="token punctuation">,</span> stopLoading<span class="token punctuation">,</span> done <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">startLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">stopLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性" aria-hidden="true">#</a> 属性</h2><table><thead><tr><th>属性名</th><th style="text-align:left;">说明</th><th><strong>类型</strong></th><th>默认值</th><th>可选值</th></tr></thead><tbody><tr><td>model-value / v-model</td><td style="text-align:left;">是否显示 Dialog</td><td>boolean</td><td>-</td><td>-</td></tr><tr><td>title</td><td style="text-align:left;">Dialog 对话框 Dialog 的标题， 也可通过具名 slot （见下表）传入</td><td>string</td><td>-</td><td>-</td></tr><tr><td>width</td><td style="text-align:left;">Dialog 的宽度</td><td>string / number</td><td>50%</td><td>-</td></tr><tr><td>fullscreen</td><td style="text-align:left;">是否为全屏 Dialog</td><td>boolean</td><td>false</td><td>-</td></tr><tr><td>top</td><td style="text-align:left;">Dialog CSS 中的 margin-top 值</td><td>string</td><td>15vh</td><td>-</td></tr><tr><td>modal</td><td style="text-align:left;">是否需要遮罩层</td><td>boolean</td><td>true</td><td>-</td></tr><tr><td>append-to-body</td><td style="text-align:left;">Dialog 自身是否插入至 body 元素上。 嵌套的 Dialog 必须指定该属性并赋值为 true</td><td>boolean</td><td>false</td><td>-</td></tr><tr><td>lock-scroll</td><td style="text-align:left;">是否在 Dialog 出现时将 body 滚动锁定</td><td>boolean</td><td>true</td><td>-</td></tr><tr><td>custom-classdeprecated</td><td style="text-align:left;">Dialog 的自定义类名</td><td>string</td><td>-</td><td>-</td></tr><tr><td>open-delay</td><td style="text-align:left;">Dialog 打开的延时时间，单位毫秒</td><td>number</td><td>0</td><td>-</td></tr><tr><td>close-delay</td><td style="text-align:left;">Dialog 关闭的延时时间，单位毫秒</td><td>number</td><td>0</td><td>-</td></tr><tr><td>close-on-click-modal</td><td style="text-align:left;">是否可以通过点击 modal 关闭 Dialog</td><td>boolean</td><td>true</td><td>-</td></tr><tr><td>close-on-press-escape</td><td style="text-align:left;">是否可以通过按下 ESC 关闭 Dialog</td><td>boolean</td><td>true</td><td>-</td></tr><tr><td>show-close</td><td style="text-align:left;">是否显示关闭按钮</td><td>boolean</td><td>true</td><td>-</td></tr><tr><td>before-close</td><td style="text-align:left;">关闭前的回调，会暂停 Dialog 的关闭. 回调函数内执行 done 参数方法的时候才是真正关闭对话框的时候.</td><td>Function(done) (done 用来关闭 Dialog)</td><td>-</td><td>-</td></tr><tr><td>draggable</td><td style="text-align:left;">为 Dialog 启用可拖拽功能</td><td>boolean</td><td>false</td><td>-</td></tr><tr><td>center</td><td style="text-align:left;">是否让 Dialog 的 header 和 footer 部分居中排列</td><td>boolean</td><td>false</td><td>-</td></tr><tr><td>align-center</td><td style="text-align:left;">是否水平垂直对齐对话框</td><td>boolean</td><td>false</td><td>-</td></tr><tr><td>destroy-on-close</td><td style="text-align:left;">当关闭 Dialog 时，销毁其中的元素</td><td>boolean</td><td>false</td><td>-</td></tr></tbody></table><h2 id="事件" tabindex="-1"><a class="header-anchor" href="#事件" aria-hidden="true">#</a> 事件</h2><table><thead><tr><th>事件名</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>open</td><td>Dialog 打开的回调</td><td>-</td></tr><tr><td>opened</td><td>Dialog 打开动画结束时的回调</td><td>-</td></tr><tr><td>close</td><td>Dialog 关闭的回调</td><td>-</td></tr><tr><td>closed</td><td>Dialog 关闭动画结束时的回调</td><td>-</td></tr><tr><td>open-auto-focus</td><td>输入焦点聚焦在 Dialog 内容时的回调</td><td>-</td></tr><tr><td>close-auto-focus</td><td>输入焦点从 Dialog 内容失焦时的回调</td><td>-</td></tr></tbody></table><h2 id="插槽" tabindex="-1"><a class="header-anchor" href="#插槽" aria-hidden="true">#</a> 插槽</h2><table><thead><tr><th>插槽名</th><th>说明</th><th>slotProps</th></tr></thead><tbody><tr><td>default</td><td>Dialog 的内容</td><td>-</td></tr><tr><td>header</td><td>对话框标题的内容；会替换标题部分，但不会移除关闭按钮。</td><td>-</td></tr><tr><td>titledeprecated</td><td>与 header 作用相同 请使用 header</td><td>-</td></tr><tr><td>footer</td><td>Dialog 按钮操作区的内容</td><td>-</td></tr></tbody></table>`,7);function h(m,b){const e=a("DialogDemo"),o=a("ContainerDemo");return l(),p("div",null,[r,k,g,n(o,null,{default:c(()=>[n(e)]),_:1}),v])}const y=d(u,[["render",h],["__file","dialog.html.vue"]]);export{y as default};
