import{_ as o,L as a,n as l,p as r,M as n,U as p,Q as t,s as d,a0 as c}from"./framework-074a7e01.js";const i={},u=t("h1",{id:"select-选择器",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#select-选择器","aria-hidden":"true"},"#"),d(" Select 选择器")],-1),k=t("p",null,"当选项过多时，使用下拉菜单展示并选择内容。",-1),b=t("h2",{id:"示例",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#示例","aria-hidden":"true"},"#"),d(" 示例")],-1),m=c(`<div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cvue-select</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>selectValue<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:dic</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>selectDic<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cvue-select</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

  <span class="token keyword">const</span> selectValue <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> selectDic <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;选项1&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;选项2&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;选项3&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性" aria-hidden="true">#</a> 属性</h2><table><thead><tr><th>属性名</th><th>说明</th><th>类型</th><th>默认值</th><th>可选值</th></tr></thead><tbody><tr><td>model-value / v-model</td><td>选中项绑定值</td><td>array / string / number / boolean / object</td><td>-</td><td>-</td></tr><tr><td>multiple</td><td>是否多选</td><td>boolean</td><td>false</td><td>true/false</td></tr><tr><td>disabled</td><td>是否禁用</td><td>boolean</td><td>false</td><td>true / false</td></tr><tr><td>value-key</td><td>作为 value 唯一标识的键名，绑定值为对象类型时必填</td><td>string</td><td>value</td><td>-</td></tr><tr><td>size</td><td>输入框尺寸</td><td>string</td><td>default</td><td>large/default/small</td></tr><tr><td>clearable</td><td>是否可以清空选项</td><td>boolean</td><td>false</td><td>true / false</td></tr><tr><td>collapse-tags</td><td>多选时是否将选中值按文字的形式展示</td><td>boolean</td><td>false</td><td>true/false</td></tr><tr><td>collapse-tags-tooltip</td><td>当鼠标悬停于折叠标签的文本时，是否显示所有选中的标签。 要使用此属性，collapse-tags 属性必须设定为 true</td><td>boolean</td><td>false</td><td>true / false</td></tr><tr><td>multiple-limit</td><td>multiple 属性设置为 true 时，代表多选场景下用户最多可以选择的项目数， 为 0 则不限制</td><td>number</td><td>0</td><td>-</td></tr><tr><td>name</td><td>Select 输入框的原生 name 属性</td><td>string</td><td>-</td><td>-</td></tr><tr><td>effect</td><td>Tooltip 主题，内置了 dark / light 两种</td><td>string</td><td>light</td><td>string</td></tr><tr><td>autocomplete</td><td>Select 输入框的原生 autocomplete 属性</td><td>string</td><td>off</td><td>-</td></tr><tr><td>placeholder</td><td>占位文字</td><td>string</td><td>Select</td><td>-</td></tr><tr><td>filterable</td><td>Select 组件是否可筛选</td><td>boolean</td><td>false</td><td>true / false</td></tr><tr><td>allow-create</td><td>是否允许用户创建新条目， 只有当 filterable 设置为 true 时才会生效。</td><td>boolean</td><td>false</td><td>true/false</td></tr><tr><td>filter-method</td><td>自定义筛选方法</td><td>function</td><td>-</td><td>-</td></tr><tr><td>remote</td><td>其中的选项是否从服务器远程加载</td><td>boolean</td><td>false</td><td>true / false</td></tr><tr><td>remote-method</td><td>自定义远程搜索方法</td><td>function</td><td>-</td><td>-</td></tr><tr><td>remote-show-suffix</td><td>远程搜索方法显示后缀图标</td><td>boolean</td><td>false</td><td>true / false</td></tr><tr><td>loading</td><td>是否正在从远程获取数据</td><td>boolean</td><td>false</td><td>true / false</td></tr><tr><td>loading-text</td><td>从服务器加载内容时显示的文本</td><td>string</td><td>Loading</td><td>-</td></tr><tr><td>no-match-text</td><td>搜索条件无匹配时显示的文字，也可以使用 empty 插槽设置</td><td>string</td><td>No matching data</td><td>-</td></tr><tr><td>no-data-text</td><td>无选项时显示的文字，也可以使用 empty 插槽设置自定义内容</td><td>string</td><td>No data</td><td>-</td></tr><tr><td>popper-class</td><td>选择器下拉菜单的自定义类名</td><td>string</td><td>-</td><td>-</td></tr><tr><td>reserve-keyword</td><td>当 multiple 和 filter 被设置为 true 时，是否在选中一个选项后保留当前的搜索关键词</td><td>boolean</td><td>true</td><td>true / false</td></tr><tr><td>default-first-option</td><td>是否在输入框按下回车时，选择第一个匹配项。 需配合 <code>filterable</code> 或 <code>remote</code> 使用</td><td>boolean</td><td>false</td><td>true / false</td></tr><tr><td>popper-append-to-body(已废弃)</td><td>是否将弹出框插入至 body 元素 当弹出框的位置出现问题时，你可以尝试将该属性设置为false。</td><td>boolean</td><td>true</td><td>true / false</td></tr><tr><td>teleported</td><td>该下拉菜单是否使用teleport插入body元素</td><td>boolean</td><td>true</td><td>true / false</td></tr><tr><td>persistent</td><td>当下拉选择器未被激活并且<code>persistent</code>设置为<code>false</code>，选择器会被删除。</td><td>boolean</td><td>true</td><td>true / false</td></tr><tr><td>automatic-dropdown</td><td>对于不可过滤的 Select 组件，此属性决定是否在输入框获得焦点后自动弹出选项菜单</td><td>boolean</td><td>false</td><td>true / false</td></tr><tr><td>clear-icon</td><td>自定义清除图标</td><td>\`string</td><td>Component\`</td><td>CircleClose</td></tr><tr><td>fit-input-width</td><td>下拉框的宽度是否与输入框相同</td><td>boolean</td><td>false</td><td>true / false</td></tr><tr><td>suffix-icon</td><td>自定义后缀图标组件</td><td>\`string</td><td>Component\`</td><td>ArrowDown</td></tr><tr><td>suffix-transitiondeprecated</td><td>下拉菜单显示/消失时后缀图标的动画</td><td>boolean</td><td>true</td><td>true / false</td></tr><tr><td>tag-type</td><td>标签类型</td><td>string</td><td>info</td><td>success/info/warning/danger</td></tr><tr><td>validate-event</td><td>是否触发表单验证</td><td>boolean</td><td>true</td><td>true / false</td></tr><tr><td>placement</td><td>下拉框出现的位置</td><td>string</td><td>bottom-start</td><td>top/top-start/top-end/bottom/bottom-start/bottom-end/left/left-start/left-end/right/right-start/right-end</td></tr></tbody></table><h2 id="事件" tabindex="-1"><a class="header-anchor" href="#事件" aria-hidden="true">#</a> 事件</h2><table><thead><tr><th>事件名</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>change</td><td>选中值发生变化时触发</td><td>val，目前的选中值</td></tr><tr><td>visible-change</td><td>下拉框出现/隐藏时触发</td><td>val，出现则为 true，隐藏则为 false</td></tr><tr><td>remove-tag</td><td>多选模式下移除tag时触发</td><td>val，移除的tag值</td></tr><tr><td>clear</td><td>可清空的单选模式下用户点击清空按钮时触发</td><td>-</td></tr><tr><td>blur</td><td>当 input 失去焦点时触发</td><td>(event: FocusEvent)</td></tr><tr><td>focus</td><td>当 input 获得焦点时触发</td><td>(event: FocusEvent)</td></tr></tbody></table><h2 id="插槽" tabindex="-1"><a class="header-anchor" href="#插槽" aria-hidden="true">#</a> 插槽</h2><table><thead><tr><th>插槽名</th><th>说明</th><th>子标签</th></tr></thead><tbody><tr><td>default</td><td>Option 组件列表</td><td>Option Group / Option</td></tr><tr><td>prefix</td><td>Select 组件头部内容</td><td>-</td></tr><tr><td>empty</td><td>无选项时的列表</td><td>-</td></tr></tbody></table>`,7);function f(v,h){const s=a("SelectDemo"),e=a("ContainerDemo");return l(),r("div",null,[u,k,b,n(e,null,{default:p(()=>[n(s)]),_:1}),m])}const y=o(i,[["render",f],["__file","select.html.vue"]]);export{y as default};
